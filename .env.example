# Environment Variable Example File
# Copy this file to .env for production/default, .env.development for development, or .env.test for testing
# and fill in the appropriate values.

# General Application Settings
# ----------------------------
# Set the environment mode (development, production, test)
NODE_ENV=production

# Server Configuration
# -------------------
# Port the application will listen on
PORT=3000
# Host the application will bind to (0.0.0.0 for all interfaces)
HOST=0.0.0.0
# Logging level (e.g., fatal, error, warn, info, debug, trace)
LOG_LEVEL=info

# Database Configuration
# ---------------------
# These are used by the application AND by Drizzle Kit for migrations.
# Ensure they match the target database for the current environment.
DB_HOST=db # Service name in docker-compose or hostname/IP
DB_PORT=5432 # Database port
DB_USER=postgres # Replace with your actual database username
DB_PASSWORD='YOUR_SECURE_PASSWORD' # IMPORTANT: Replace with a secure password
DB_NAME=bun_badges # e.g., bun_badges, bun_badges_dev, bun_badges_test

# SECURITY NOTE: Never commit actual credentials to version control.
# The application will use these environment variables or fall back to non-credential
# placeholder values for development environments only.

# Full database connection string (alternative to individual vars)
# DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
DATABASE_URL='postgres://postgres:YOUR_DB_PASSWORD@db:5432/bun_badges'

# JWT Authentication
# -------------------
# Use strong, unique secrets for JWT generation
JWT_SECRET='YOUR_JWT_SECRET_KEY_CHANGE_ME'
JWT_EXPIRY=1h # e.g., 1h, 30m, 7d
REFRESH_TOKEN_SECRET='YOUR_REFRESH_TOKEN_SECRET_KEY_CHANGE_ME'
REFRESH_TOKEN_EXPIRY=7d

# Key Management (for encrypting sensitive data like private keys)
# ---------------
# MUST be a 32-byte secret (e.g., 64 hex characters). Generate securely.
MASTER_ENCRYPTION_KEY='YOUR_MASTER_ENCRYPTION_KEY_32_BYTES_CHANGE_ME'

# HTTPS Configuration (Optional)
# -----------------------------
# Set to true to enable HTTPS (requires cert/key files)
# USE_HTTPS=false
# Path to TLS certificate file
# TLS_CERT_FILE='/path/to/your/cert.pem'
# Path to TLS key file
# TLS_KEY_FILE='/path/to/your/key.pem'
# Optional passphrase for the key file
# TLS_PASSPHRASE=

# Docker-specific overrides (Optional, for docker-compose.light.yml)
# ----------------------------------------------------------------
# DOCKER_CONTAINER=true
# SKIP_CANVAS=true

# Docker Configuration (used by docker-compose.*.yml)
# These should align with DB_* variables unless using different credentials/db for containerized setup
POSTGRES_DB=bun_badges_test # Example DB name for Docker PostgreSQL container
POSTGRES_USER=postgres # Example user for Docker PostgreSQL container
POSTGRES_PASSWORD=postgres # Example password for Docker PostgreSQL container

# PGAdmin Configuration (used by docker-compose.*.yml)
PGADMIN_DEFAULT_EMAIL=admin@example.com # Default email for pgAdmin login
PGADMIN_DEFAULT_PASSWORD=admin # Default password for pgAdmin login
PGADMIN_PORT=5050 # Port to access pgAdmin web UI

# OAuth Configuration
# When set to true, disables the consent screen for machine-to-machine auth
OAUTH_ALLOW_HEADLESS=true
# Default token expiration time for OAuth access tokens (in seconds)
OAUTH_ACCESS_TOKEN_EXPIRY=3600
# Default token expiration time for OAuth refresh tokens (in seconds)
OAUTH_REFRESH_TOKEN_EXPIRY=2592000