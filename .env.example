# Server Configuration
PORT=7777
NODE_ENV=development

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=badges
DB_USER=badges_user
DB_PASSWORD=badges_password
DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# Docker Configuration
POSTGRES_DB=${DB_NAME}
POSTGRES_USER=${DB_USER}
POSTGRES_PASSWORD=${DB_PASSWORD}

# JWT Configuration
JWT_SECRET=your-secret-key
JWT_EXPIRY=15m
REFRESH_TOKEN_EXPIRY=7d

# OAuth Configuration
# When set to true, disables the consent screen for machine-to-machine auth
OAUTH_ALLOW_HEADLESS=true
# Default token expiration time for OAuth access tokens (in seconds)
OAUTH_ACCESS_TOKEN_EXPIRY=3600
# Default token expiration time for OAuth refresh tokens (in seconds)
OAUTH_REFRESH_TOKEN_EXPIRY=2592000

# HTTPS Configuration
# Set to "true" to enable HTTPS, "false" for HTTP
USE_HTTPS=false
# Path to the SSL/TLS certificate file
TLS_CERT_FILE=./certs/cert.pem
# Path to the SSL/TLS private key file
TLS_KEY_FILE=./certs/key.pem
# Optional passphrase if the private key is encrypted
TLS_PASSPHRASE=

# Added for OB 3.0 Secure Key Management (Phase 3)
# This is a master key used to encrypt/decrypt issuer private keys stored in the DB.
# Generate a secure random string (e.g., 32 bytes base64 encoded) and keep it safe!
# Example (DO NOT USE THIS): ChangeMeInProductionMasterKey!!!
MASTER_ENCRYPTION_KEY=

# Optional: HTTPS configuration (for local dev with self-signed certs)
# USE_HTTPS=false
# TLS_CERT_FILE=./certs/cert.pem
# TLS_KEY_FILE=./certs/key.pem
# TLS_PASSPHRASE=

LOG_LEVEL=debug 