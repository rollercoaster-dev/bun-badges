FROM oven/bun:1 AS dev

# Ensure we're running as root for package installation
USER root

# Add backports for newer librsvg
RUN echo "deb http://deb.debian.org/debian bookworm-backports main" >> /etc/apt/sources.list

# Install build tools and libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    python3 \
    build-essential \
    pkg-config \
    libpixman-1-dev \
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    ca-certificates \
    gnupg \
    && apt-get install -y -t bookworm-backports librsvg2-dev \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install -y nodejs \
    && npm install -g node-gyp \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Set environment variables
ENV PORT=3000 \
    HOST="0.0.0.0" \
    NODE_ENV=development

# Expose ports for development
EXPOSE ${PORT}

# Create a directory for startup scripts that won't be affected by volume mounts
RUN mkdir -p /docker-scripts

# Copy the scripts to a location that won't be overwritten by volume mounts
COPY scripts/start-dev.sh /docker-scripts/start-dev.sh
COPY scripts/preload-global-bitset.js /docker-scripts/preload-global-bitset.js
RUN chmod +x /docker-scripts/start-dev.sh

# Set the entrypoint to the startup script
ENTRYPOINT ["/docker-scripts/start-dev.sh"]

# No need for CMD as the entrypoint script handles everything