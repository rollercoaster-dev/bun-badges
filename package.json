{
  "name": "bun-badges",
  "version": "0.0.2-alpha.0",
  "description": "Open Badges server implementation using Bun and Hono",
  "type": "module",
  "scripts": {
    "start": "bun run src/index.ts",
    "dev": "bun --watch run src/index.ts",
    "dev:db": "bun db:docker:up && bun dev",
    "dev:https": "USE_HTTPS=true bun --watch run src/index.ts",
    "dev:docker": "bun run scripts/start-dev.ts",
    "dev:docker:build": "docker-compose -f docker-compose.dev.yml up --build",
    "dev:docker:down": "docker-compose -f docker-compose.dev.yml down",
    "dev:light": "docker-compose -f docker-compose.light.yml up ",
    "dev:light:build": "docker-compose -f docker-compose.light.yml up --build",
    "dev:light:down": "docker-compose -f docker-compose.light.yml down",
    "gen:certs": "bash ./scripts/generate-certs.sh",
    "build": "bun build.ts",
    "build:tsc": "tsc --project tsconfig.build.json",
    "build:bundle": "bun build ./src/index.ts --outdir dist --target bun --format esm --splitting",
    "build:monolith": "bun build src/index.ts --outdir dist --target bun --sourcemap",
    "tsc": "tsc --noEmit",
    "tsc:src": "tsc --project tsconfig.src.json --noEmit",
    "tsc:test": "tsc --project tsconfig.test.json --noEmit",
    "format": "prettier --write \"src/**/*.{ts,tsx}\"",
    "lint": "eslint \"src/**/*.{ts,tsx}\" --fix",
    "lint:script": "bun scripts/lint.ts",
    "lint-fix": "eslint \"src/**/*.{ts,tsx}\" --fix",
    "cleanup:scripts": "bash ./scripts/cleanup-test-scripts.sh",
    "cleanup:docker": "bash ./scripts/cleanup-docker-build-files.sh",
    "db:docker:up": "docker-compose -f docker-compose.dev.yml up",
    "db:docker:down": "docker-compose -f docker-compose.dev.yml down",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "bun run src/db/migrate.ts",
    "db:validate": "bun run src/db/schema/ensure-schema.ts",
    "db:create": "bun run src/db/create-database.ts",
    "db:migrate:status": "echo \"Migration status check via script not implemented, use db:migrate\"",
    "db:migrate:evidence-url": "bun run tests/scripts/run-evidence-url-migration.js",
    "db:push": "drizzle-kit push:pg",
    "db:studio": "drizzle-kit studio",
    "db:generate:dev": "dotenv -e .env.development -- drizzle-kit generate",
    "db:migrate:dev": "dotenv -e .env.development -- bun run src/db/migrate.ts",
    "db:push:dev": "dotenv -e .env.development -- drizzle-kit push:pg",
    "db:studio:dev": "dotenv -e .env.development -- drizzle-kit studio",
    "db:test": "docker-compose -f docker-compose.test.yml up -d db_test redis_test",
    "db:compare": "bun tools/database/compare-db-environments.ts",
    "verify:credential": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --rm test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun --preload ./tests/setup.ts ./tools/verification/verify-credential-service.ts'",
    "test": "bun test",
    "test:all": "bun test:unit && bun test:integration && bun test:e2e",
    "test:watch": "bun test --watch",
    "test:unit": "node scripts/run-tests.js unit",
    "test:integration": "node scripts/run-tests.js integration",
    "test:integration:file": "node scripts/run-tests.js integration",
    "test:file": "node scripts/run-tests.js file",
    "test:e2e": "node scripts/run-tests.js e2e",
    "test:unit:docker": "bun test tests/unit/**/*.test.ts",
    "test:integration:docker": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e INTEGRATION_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test tests/integration/**/*.test.ts'",
    "test:file:docker": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test'",
    "test:e2e:docker": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true -e BUN_DEBUG=1 test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/index.ts'",
    "test:e2e:coverage": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test --coverage ./tests/e2e/index.ts'",
    "test:e2e:lifecycle": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/badge-lifecycle/*.test.ts'",
    "test:e2e:auth": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/auth/*.test.ts'",
    "test:e2e:crypto": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/cryptographic/*.test.ts'",
    "test:e2e:recipient": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/recipient/*.test.ts'",
    "test:e2e:status": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/status/*.test.ts'",
    "test:e2e:structural": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml run --entrypoint \"\" --build --rm -e NODE_ENV=test -e E2E_TEST=true test_runner sh -c 'bun install --prefer-offline && bun run src/db/migrate.ts && bun test ./tests/e2e/flows/structural/*.test.ts'",
    "example:ob3": "bun run examples/run-ob3-example.js",
    "release": "commit-and-tag-version",
    "release:minor": "commit-and-tag-version --release-as minor",
    "release:major": "commit-and-tag-version --release-as major",
    "release:patch": "commit-and-tag-version --release-as patch",
    "release:alpha": "commit-and-tag-version --prerelease alpha",
    "release:beta": "commit-and-tag-version --prerelease beta"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "bun run lint",
      "bun run format"
    ]
  },
  "dependencies": {
    "@hono/node-server": "^1.13.8",
    "@larswander/png-text": "^1.0.0",
    "@noble/curves": "^1.4.0",
    "@noble/ed25519": "^2.2.3",
    "@noble/hashes": "^1.7.1",
    "@paralleldrive/cuid2": "^2.2.2",
    "@scure/base": "^1.2.4",
    "@transmute/did-key-ed25519": "^0.3.0-unstable.10",
    "@transmute/json-web-signature": "^0.7.0-unstable.60",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "arg": "^5.0.2",
    "base64url": "^3.0.1",
    "bnid": "^3.0.0",
    "canvas": "2.11.2",
    "dotenv": "^16.4.7",
    "drizzle-orm": "0.41.0",
    "fast-bitset": "^1.3.2",
    "hono": "^4.0.5",
    "jose": "^6.0.10",
    "jsonld": "^8.3.2",
    "multiformats": "^13.1.0",
    "n3": "^1.17.2",
    "nanoid": "^5.1.4",
    "openbadges-types": "^1.0.1",
    "pg": "^8.11.3",
    "pino": "^9.6.0",
    "png-itxt": "^2.0.0",
    "png-metadata": "^1.0.2",
    "postgres": "^3.4.5",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@hono/swagger-ui": "^0.5.1",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.11.0",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^8.26.1",
    "@typescript-eslint/parser": "^8.26.1",
    "bun-types": "latest",
    "commit-and-tag-version": "^12.5.0",
    "dotenv-cli": "^8.0.0",
    "drizzle-kit": "^0.30.5",
    "eslint": "^9.22.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "husky": "^9.1.7",
    "lint-staged": "^15.5.0",
    "pino-pretty": "^13.0.0",
    "prettier": "^3.5.3",
    "supertest": "^7.1.0",
    "swagger-typescript-api": "^13.0.23",
    "typescript": "^5.0.0"
  },
  "engines": {
    "bun": ">=1.0.0"
  },
  "author": "",
  "license": "MIT"
}
